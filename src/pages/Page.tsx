// src/pages/Page.tsx - –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è PageHeader

import React, { useEffect } from 'react';
import { IonButtons, IonButton, IonIcon, IonContent, IonPage } from '@ionic/react';
import { useParams } from 'react-router';
import { addOutline, searchOutline, ellipsisVerticalOutline } from 'ionicons/icons';
import { useNavigation } from '../hooks/useNavigation';
import PageHeader from './PageHeader';

const Page: React.FC = () => {
  const { name } = useParams<{ name: string }>();
  const { 
    navigateToSection, 
    getCurrentLevel, 
    navigateInside,
    getCurrentSectionNav 
  } = useNavigation();

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–º —Å—Ç–µ–π—Ç–æ–º
  useEffect(() => {
    if (name) {
      navigateToSection(name);
    }
  }, [name, navigateToSection]);

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  const currentLevel = getCurrentLevel();
  const sectionNav = getCurrentSectionNav();

  // ============================================
  // –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–ù–û–ü–ö–ò –î–õ–Ø HEADER
  // ============================================

  const renderRightButtons = () => {
    switch (name) {
      case 'Inbox':
        return (
          <>
          </>
        );
      
      case 'Outbox':
        return (
          <></>
        );
      
      default:
        return (
          <></>
        );
    }
  };

  // ============================================
  // –ó–ê–ì–û–õ–û–í–û–ö –í –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –û–¢ –£–†–û–í–ù–Ø
  // ============================================

  const getPageTitle = () => {
    if (currentLevel === 'main') {
      return name || '–°—Ç—Ä–∞–Ω–∏—Ü–∞';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≥–ª—É–±–æ–∫–∏—Ö —É—Ä–æ–≤–Ω–µ–π
    switch (name) {
      case 'Inbox':
        if (currentLevel === 'details') return '–ü–∏—Å—å–º–æ';
        if (currentLevel === 'attachments') return '–í–ª–æ–∂–µ–Ω–∏—è';
        break;
      
      case 'Outbox':
        if (currentLevel === 'compose') return '–ù–æ–≤–æ–µ –ø–∏—Å—å–º–æ';
        if (currentLevel === 'draft') return '–ß–µ—Ä–Ω–æ–≤–∏–∫';
        break;
    }
    
    return name || '–°—Ç—Ä–∞–Ω–∏—Ü–∞';
  };

  // ============================================
  // –†–ï–ù–î–ï–† –ö–û–ù–¢–ï–ù–¢–ê –ü–û –£–†–û–í–ù–Ø–ú
  // ============================================

  const renderContent = () => {
    switch (name) {
      case 'Inbox':
        return renderInboxContent(currentLevel, sectionNav.data);
      
      case 'Outbox':
        return renderOutboxContent(currentLevel, sectionNav.data);
      
      case 'Favorites':
        return renderFavoritesContent(currentLevel, sectionNav.data);
        
      default:
        return <></>;
    }
  };

  const renderInboxContent = (level: string, data?: any) => {
    switch (level) {
      case 'main':
        return (
          <div className="p-md">
            <h2>–í—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞</h2>
            <div className="corporate-card" onClick={() => navigateInside('details', { id: 1, subject: '–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ' })}>
              <p><strong>–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ</strong></p>
              <p className="text-muted">–û—Ç: test@example.com</p>
            </div>
          </div>
        );
      
      case 'details':
        return (
          <div className="p-md">
            <h2>{data?.subject}</h2>
            <p className="text-muted">–û—Ç: {data?.from || 'test@example.com'}</p>
            <div className="mt-md">
              <p>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–∏—Å—å–º–∞...</p>
              <IonButton 
                expand="block" 
                fill="outline" 
                onClick={() => navigateInside('attachments', data)}
                className="mt-md"
              >
                –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è
              </IonButton>
            </div>
          </div>
        );
      
      case 'attachments':
        return (
          <div className="p-md">
            <h2>–í–ª–æ–∂–µ–Ω–∏—è</h2>
            <p className="text-muted">–ö –ø–∏—Å—å–º—É: {data?.subject}</p>
            <div className="mt-md">
              <div className="corporate-card">
                <p>üìÑ document.pdf</p>
              </div>
              <div className="corporate-card">
                <p>üñºÔ∏è image.jpg</p>
              </div>
            </div>
          </div>
        );
      
      default:
        return <div>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: {level}</div>;
    }
  };

  const renderOutboxContent = (level: string, data?: any) => {
    switch (level) {
      case 'main':
        return (
          <div className="p-md">
            <h2>–ò—Å—Ö–æ–¥—è—â–∏–µ</h2>
            <IonButton 
              expand="block" 
              onClick={() => navigateInside('compose')}
            >
              –ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ
            </IonButton>
          </div>
        );
      
      case 'compose':
        return (
          <div className="p-md">
            <h2>–ù–æ–≤–æ–µ –ø–∏—Å—å–º–æ</h2>
            <form>
              <input type="email" placeholder="–ö–æ–º—É" className="borders p-sm mb-sm w-full" />
              <input type="text" placeholder="–¢–µ–º–∞" className="borders p-sm mb-sm w-full" />
              <textarea placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ" className="borders p-sm mb-md w-full" rows={10}></textarea>
              <div className="flex gap-sm">
                <IonButton expand="block" color="primary">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</IonButton>
                <IonButton expand="block" fill="outline">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</IonButton>
              </div>
            </form>
          </div>
        );
      
      default:
        return <div>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å: {level}</div>;
    }
  };

  const renderFavoritesContent = (level: string, data?: any) => {
    return (
      <div className="p-md">
        <h2>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h2>
        <p>–ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–∞ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ</p>
      </div>
    );
  };

  // ============================================
  // –û–°–ù–û–í–ù–û–ô –†–ï–ù–î–ï–†
  // ============================================

  return (
    <IonPage>
      <PageHeader
        title={getPageTitle()}
        rightButtons={renderRightButtons()}
        variant="glass" // –∏–ª–∏ 'default', 'corporate'
      />
      
      <IonContent fullscreen>
        {renderContent()}
      </IonContent>
    </IonPage>
  );
};

export default Page;